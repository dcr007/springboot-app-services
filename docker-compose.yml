version: '3'
services:
  order-service:
    image: order-service:0.0.1-SNAPSHOT
    environment:
      OTEL_SERVICE_NAME: "order-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=order-service,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
      MANAGEMENT_OTLP_METRICS_EXPORT_ENABLED: true
      MANAGEMENT_OTLP_METRICS_EXPORT_URL: http://collector:4318/v1/metrics
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - collector

  payment-service:
    image: payment-service:0.0.1-SNAPSHOT
    environment:
      OTEL_SERVICE_NAME: "payment-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=payment-service,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
      MANAGEMENT_OTLP_METRICS_EXPORT_ENABLED: true
      MANAGEMENT_OTLP_METRICS_EXPORT_URL: http://collector:4318/v1/metrics
    ports:
      - "8081:8081"
    depends_on:
#      - order-service
      - collector

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver (needed!)
      - "8889:8889"  # Prometheus exporter metrics
    depends_on:
      - loki
      - jaeger-all-in-one
#      - zipkin-all-in-one
#      - tempo

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - jaeger-all-in-one
#      - zipkin-all-in-one
#      - tempo

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "4317"

  postgres:
    container_name: postgres
    image: postgres:latest
    tty: true   # 1 of 2 requirement for detached mode
    stdin_open: true # 2 of 2 requirement for detached mode
    restart: always
    environment:
      POSTGRES_DB: opentelemetry
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
  
#  zipkin-all-in-one:
#    container_name: zipkin
#    image: openzipkin/zipkin:latest
#    restart: always
#    ports:
#      - "9411:9411"

#  tempo:
#    container_name: tempo
#    image: grafana/tempo:latest
#    command: [ "-config.file=/etc/tempo.yml" ]
#    volumes:
#      - ./docker/tempo/tempo.yml:/etc/tempo.yml
#    restart: always
#    ports:
#      - "4317"  # otlp grpc
#      - "3200"  # tempo as grafana datasource
