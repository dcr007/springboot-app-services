<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.3</version>  <!-- Ensure this matches your Spring Boot version -->
        <relativePath/> <!-- Look up parent POM from repository -->
    </parent>

    <groupId>ews.ondemand.services</groupId>
    <artifactId>ews-observablity-services</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <modules>
        <module>order-service</module>
        <module>payment-service</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <spring-boot.version>3.3.3</spring-boot.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-dependency-management.version>1.1.4</spring-dependency-management.version>
        <jib.version>3.4.0</jib.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <spring-cloud-starter-openfeign>4.1.3</spring-cloud-starter-openfeign>
        <feign-micrometer>13.3</feign-micrometer>
        <opentelemetry-javaagent>2.5.0</opentelemetry-javaagent>
        <micrometer-tracing-bridge-otel>1.4.0</micrometer-tracing-bridge-otel>
        <opentelemetry-exporter-otlp>1.45.0</opentelemetry-exporter-otlp>
        <micrometer-registry-otlp>1.14.3</micrometer-registry-otlp>
        <postgresql>42.6.0</postgresql>
        <lombok>1.18.30</lombok>
    </properties>



    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot Starter Dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-starter-openfeign}</version>

            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-micrometer</artifactId>
                <version>${feign-micrometer}</version>
            </dependency>
            <!-- OpenTelemetry -->
            <dependency>
                <groupId>io.opentelemetry.javaagent</groupId>
                <artifactId>opentelemetry-javaagent</artifactId>
                <version>${opentelemetry-javaagent}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bridge-otel</artifactId>
                <version>${micrometer-tracing-bridge-otel}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-exporter-otlp</artifactId>
                <version>${opentelemetry-exporter-otlp}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-otlp</artifactId>
                <version>${micrometer-registry-otlp}</version>
            </dependency>

            <!-- PostgreSQL -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <scope>runtime</scope>
                <version>${postgresql}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <scope>provided</scope>
                <version>${lombok}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Testing -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>${spring-boot.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Spring Boot Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.opentelemetry.javaagent</groupId>
                                    <artifactId>opentelemetry-javaagent</artifactId>
                                    <version>1.32.0</version> <!-- Make sure this matches your Gradle version -->
                                    <destFileName>opentelemetry-javaagent.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Plugin to copy the agent JAR -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/agent" />
                                <copy file="${project.build.directory}/dependency/opentelemetry-javaagent.jar"
                                      tofile="${project.build.directory}/agent/opentelemetry-javaagent.jar" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Jib Plugin -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.version}</version>
                <configuration>
                    <from>
                        <image>gcr.io/distroless/java17-debian12</image>
                        <platforms>
                            <platform>
                                <architecture>amd64</architecture>
                                <os>linux</os>
                            </platform>
                        </platforms>
                    </from>
                    <extraDirectories>
                        <paths>
                            <path>
                                <from>${project.build.directory}/agent</from>
                                <into>/otelagent</into>
                            </path>
                        </paths>
                    </extraDirectories>
                    <container>
                        <jvmFlags>
                            <jvmFlag>-javaagent:/otelagent/opentelemetry-javaagent.jar</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.build.directory}/agent</directory>
                <includes>
                    <include>opentelemetry-javaagent.jar</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
